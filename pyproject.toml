# ---- Project Info and Dependencies ----

[project.urls]
Repository = "https://github.com/shubxam/linkhut-lib"
# Homepage = "https://..."
# Documentation = "https://..."

[project]
name = "linkhut-lib"
description = "Python library for interacting with LinkHut bookmarking service API"
authors = [
    { name="Shubham Soni", email="shubxam@gmail.com" },
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11,<4.0"
dynamic = ["version"]

# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

keywords = ["bookmark-manager", "bookmarks", "api", "library"]

# ---- Main dependencies ----

dependencies = [
    "dotenv>=0.9.9",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
]

# ---- Dev dependencies ----

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "ruff>=0.11.0",
    "codespell>=2.4.1",
    "basedpyright>=1.28.2",
]

# ---- Build system ----

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = "true"
fallback-version = "0.1.0"

[tool.hatch.build.targets.wheel]
packages = ["src/linkhut_lib"]

# ---- Settings ----

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E", # https://docs.astral.sh/ruff/rules/#error-e
    "F", # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "B", # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "I", # https://docs.astral.sh/ruff/rules/#isort-i
]
ignore = [
    "E501", # https://docs.astral.sh/ruff/rules/line-too-long/
    "E402", # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
    "E731", # https://docs.astral.sh/ruff/rules/lambda-assignment/
    "W191", # https://docs.astral.sh/ruff/rules/tab-indentation/
    "E111", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple/
    "E114", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple-comment/
    "E117", # https://docs.astral.sh/ruff/rules/over-indented/
    "B008"
]

[tool.basedpyright]
include = ["src", "tests"]
reportIgnoreCommentWithoutRule = false
reportUnnecessaryTypeIgnoreComment = false
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportAny = false
reportExplicitAny = false

[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = [
    "src",
    "tests",
]